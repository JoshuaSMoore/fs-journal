(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{489:function(t,e,s){"use strict";s.r(e);var a=s(1),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"what-is-a-list-in-c"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-a-list-in-c"}},[t._v("#")]),t._v(" What is a List in C#?")]),t._v(" "),s("ul",[s("li",[t._v("< list > is a strongly typed list of objects that can be accessed by index.")])]),t._v(" "),s("h2",{attrs:{id:"what-list-methods-seem-like-you-might-use-them-often-why"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-list-methods-seem-like-you-might-use-them-often-why"}},[t._v("#")]),t._v(" What List methods seem like you might use them often? Why?")]),t._v(" "),s("ul",[s("li",[t._v("list< t > which offers a few methods that relate to a generic string. Add, adds an obejct to the end which can be very useful, contains is huge, determines rather an element is in the list, copyto copies the list to a compatibale one dimensional array, equals, get enumerator, get type. List has so many options that can all be incredibly helpful.")])]),t._v(" "),s("h2",{attrs:{id:"how-would-you-retrieve-an-item-from-a-list-what-method-could-you-use"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-would-you-retrieve-an-item-from-a-list-what-method-could-you-use"}},[t._v("#")]),t._v(" How would you retrieve an item from a list? What method could you use?")]),t._v(" "),s("ul",[s("li",[t._v("contains(), indexOf, find. There are multiple methods depending on what exactly you are trying to accomplish to retrieve an item or information from a list.")])]),t._v(" "),s("p",[t._v("Gregslist C# - https://github.com/JoshuaSMoore/gregslist-C-")])])}),[],!1,null,null,null);e.default=i.exports}}]);